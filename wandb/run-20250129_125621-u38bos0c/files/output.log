Epoch 1 / 10:   0%|                                                                                                                                                                    | 0/1000 [00:00<?, ?it/s]
{'label': tensor([1, 1, 0, 1, 1, 4, 1, 3, 1, 4, 4, 1, 0, 0, 1, 4]), 'input_ids': [tensor([101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101,
        101, 101]), tensor([ 1045,  1045,  1045,  1045,  1045,  1045,  1045,  1045, 10047,  1045,
         2043,  1045,  1045,  1045,  8909,  1045]), tensor([2513, 2572, 2514, 2514, 2572, 2145, 2514, 2371, 2085, 2572, 1045, 2514,
        2145, 2514, 2763, 2572]), tensor([ 2188,  3110,  6439,  2008,  1037,  2228,  2008, 21888,  1998,  3110,
         2471,  7199,  2031,  2066,  2022,  2025]), tensor([ 3110,  3243,  1045,  1045, 11361,  2009,  1045,  1998,  2145,  3492,
         2939,  2469,  5346,  1045,  3100,  3110]), tensor([ 1999, 20673,  2514,  2001,  2496,  2003,  2310,  1996, 23042, 15035,
         2006,  8141,  2044,  2572,  4147, 19725]), tensor([ 5737,  2085,  2023,  7036,  2158,  4276,  2042,  3746,  2000,  2157,
         1037,  2097,  2057, 14248,  2593,   102]), tensor([20255,  2004, 29556,  1045,  3065, 14739,  2200,  2008,  1996,  2085,
         7488,  3613,  3631,  2005,  1997,     0]), tensor([ 4383,  1045,  2066,  2106,  2033,  2182, 24665, 10538,  2126,  2096,
          102,  2000,  2039,  2383,  2068,     0]), tensor([ 1998,  2134,  1037,  2025,  2010,  2004, 20113,  2046,  2542, 22868,
            0,  3477,   102,  2068,  2004,     0]), tensor([5782, 1056, 2210, 2215, 5030, 1037, 1999, 2026, 1037, 2023,    0, 2005,
           0, 2205, 8909,    0]), tensor([ 2062,  2941,  4690,  2000,  3614, 14764,  2025,  2568,  7965,   102,
            0,  4349,     0,   102,  2031,     0]), tensor([  102,  2156,  3442,  3480,  1998,  2005, 13847,  2001,  1998,     0,
            0,   102,     0,     0,  2062,     0]), tensor([   0, 2151, 2000, 3087, 1045, 1996, 2041, 1997, 4906,    0,    0,    0,
           0,    0, 4569,    0]), tensor([    0, 15100,  2026,   102,  8415,  2279,  2055,  7149,  9580,     0,
            0,     0,     0,     0,  2437,     0]), tensor([    0,  2021,  3108,     0,  1045,  2051, 16156,  2007,  3084,     0,
            0,     0,     0,     0,  6683,     0]), tensor([    0, 14155,  3442,     0,  2572,  1045,  2061,  1037,  2033,     0,
            0,     0,     0,     0, 10994,     0]), tensor([   0, 1996, 2000,    0, 2025, 2514, 2065, 2502, 2514,    0,    0,    0,
           0,    0, 2618,    0]), tensor([    0,  5751,  2026,     0,  7294, 11480,  2017, 12226, 18114,     0,
            0,     0,     0,     0,  1998,     0]), tensor([    0, 10174,  3108,     0,  2006,   102,  2387,  1999,  9657,     0,
            0,     0,     0,     0,  2514,     0]), tensor([   0, 1996, 2000,    0, 2017,    0, 2009, 2026, 2844,    0,    0,    0,
           0,    0, 9882,    0]), tensor([    0,  5246,  2026,     0,  2021,     0,  4906, 10818,  1998,     0,
            0,     0,     0,     0,  4147,     0]), tensor([    0,  4385,  3108,     0,  1045,     0,  2000, 19217, 22446,     0,
            0,     0,     0,     0,  2009,     0]), tensor([   0, 1998, 2000,    0, 2074,    0, 5744, 1998, 2006,    0,    0,    0,
           0,    0, 2021,    0]), tensor([   0, 2288, 2026,    0, 2514,    0, 2477, 2059, 1037,    0,    0,    0,
           0,    0, 1045,    0]), tensor([   0, 2009, 3108,    0, 2023,    0, 2058, 3110, 3679,    0,    0,    0,
           0,    0, 2298,    0]), tensor([    0,  3962,  3442,     0,  4086,     0, 12256, 10206,  3978,     0,
            0,     0,     0,     0,  2062,     0]), tensor([    0,  2006,  2000,     0,  2943,     0, 12928,   102,   102,     0,
            0,     0,     0,     0,  2066,     0]), tensor([    0,   102,  2026,     0,  2013,     0, 11272,     0,     0,     0,
            0,     0,     0,     0, 21368,     0]), tensor([   0,    0, 3108,    0, 2017,    0, 1045,    0,    0,    0,    0,    0,
           0,    0, 5714,    0]), tensor([   0,    0, 3442,    0, 2066,    0, 2876,    0,    0,    0,    0,    0,
           0,    0, 1998,    0]), tensor([   0,    0, 2000,    0, 1045,    0, 1056,    0,    0,    0,    0,    0,
           0,    0, 2052,    0]), tensor([   0,    0, 2026,    0, 2113,    0, 2360,    0,    0,    0,    0,    0,
           0,    0, 2087,    0]), tensor([   0,    0, 3108,    0, 2017,    0, 2053,    0,    0,    0,    0,    0,
           0,    0, 3497,    0]), tensor([   0,    0, 2000,    0, 2021,    0,  102,    0,    0,    0,    0,    0,
           0,    0, 2031,    0]), tensor([   0,    0, 2026,    0, 1045,    0,    0,    0,    0,    0,    0,    0,
           0,    0, 2062,    0]), tensor([   0,    0, 3108,    0, 2123,    0,    0,    0,    0,    0,    0,    0,
           0,    0, 4569,    0]), tensor([   0,    0, 2000,    0, 2102,    0,    0,    0,    0,    0,    0,    0,
           0,    0, 1999,    0]), tensor([   0,    0, 2026,    0, 2113,    0,    0,    0,    0,    0,    0,    0,
           0,    0, 2014,    0]), tensor([   0,    0, 3108,    0, 2017,    0,    0,    0,    0,    0,    0,    0,
           0,    0, 9427,    0]), tensor([   0,    0, 3442,    0, 2157,    0,    0,    0,    0,    0,    0,    0,
           0,    0, 2004,    0]), tensor([   0,    0, 2000,    0,  102,    0,    0,    0,    0,    0,    0,    0,
           0,    0, 2009,    0]), tensor([   0,    0, 2026,    0,    0,    0,    0,    0,    0,    0,    0,    0,
           0,    0, 2094,    0]), tensor([   0,    0, 3108,    0,    0,    0,    0,    0,    0,    0,    0,    0,
           0,    0, 2022,    0]), tensor([   0,    0, 3442,    0,    0,    0,    0,    0,    0,    0,    0,    0,
           0,    0, 6082,    0]), tensor([   0,    0, 2000,    0,    0,    0,    0,    0,    0,    0,    0,    0,
           0,    0, 2000,    0]), tensor([   0,    0, 2026,    0,    0,    0,    0,    0,    0,    0,    0,    0,
           0,    0, 4133,    0]), tensor([   0,    0,  102,    0,    0,    0,    0,    0,    0,    0,    0,    0,
           0,    0, 1998,    0]), tensor([   0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
           0,    0, 2693,    0]), tensor([   0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
           0,    0, 2105,    0]), tensor([   0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
           0,    0, 2004,    0]), tensor([   0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
           0,    0, 2092,    0]), tensor([   0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
           0,    0, 2004,    0]), tensor([   0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
           0,    0, 2000,    0]), tensor([   0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
           0,    0, 2131,    0]), tensor([   0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
           0,    0, 2006,    0]), tensor([  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
        102,   0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0,
Traceback (most recent call last):
  File "C:\Users\student\Desktop\Transformer Training\training.py", line 26, in <module>
    setup_training(data_dir, config)
  File "C:\Users\student\Desktop\Transformer Training\training.py", line 19, in setup_training
    trainer.train(train_loader, val_loader)
  File "C:\Users\student\Desktop\Transformer Training\train.py", line 134, in train
    batch = {
            ^
  File "C:\Users\student\Desktop\Transformer Training\train.py", line 136, in <dictcomp>
    else torch.tensor(v, dtype=torch.long, device=self.device) if isinstance(v, (int, list))
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
TypeError: only integer tensors of a single element can be converted to an index
