Epoch 1 / 10:   0%|                                                           | 0/63 [00:00<?, ?it/s]
Traceback (most recent call last):
  File "/home/nooman/Documents/Transformer-Training/training.py", line 23, in <module>
    setup_training(data_dir, config)
  File "/home/nooman/Documents/Transformer-Training/training.py", line 16, in setup_training
    trainer.train(train_loader, val_loader)
  File "/home/nooman/Documents/Transformer-Training/train.py", line 141, in train
    outputs = self.model(**batch)
  File "/home/nooman/Documents/Transformer-Training/env/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1736, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/nooman/Documents/Transformer-Training/env/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1747, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/nooman/Documents/Transformer-Training/env/lib/python3.10/site-packages/transformers/models/bert/modeling_bert.py", line 1665, in forward
    outputs = self.bert(
  File "/home/nooman/Documents/Transformer-Training/env/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1736, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/nooman/Documents/Transformer-Training/env/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1747, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/nooman/Documents/Transformer-Training/env/lib/python3.10/site-packages/transformers/models/bert/modeling_bert.py", line 1142, in forward
    encoder_outputs = self.encoder(
  File "/home/nooman/Documents/Transformer-Training/env/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1736, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/nooman/Documents/Transformer-Training/env/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1747, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/nooman/Documents/Transformer-Training/env/lib/python3.10/site-packages/transformers/models/bert/modeling_bert.py", line 695, in forward
    layer_outputs = layer_module(
  File "/home/nooman/Documents/Transformer-Training/env/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1736, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/nooman/Documents/Transformer-Training/env/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1747, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/nooman/Documents/Transformer-Training/env/lib/python3.10/site-packages/transformers/models/bert/modeling_bert.py", line 627, in forward
    layer_output = apply_chunking_to_forward(
  File "/home/nooman/Documents/Transformer-Training/env/lib/python3.10/site-packages/transformers/pytorch_utils.py", line 255, in apply_chunking_to_forward
    return forward_fn(*input_tensors)
  File "/home/nooman/Documents/Transformer-Training/env/lib/python3.10/site-packages/transformers/models/bert/modeling_bert.py", line 640, in feed_forward_chunk
    layer_output = self.output(intermediate_output, attention_output)
  File "/home/nooman/Documents/Transformer-Training/env/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1736, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/nooman/Documents/Transformer-Training/env/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1747, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/nooman/Documents/Transformer-Training/env/lib/python3.10/site-packages/transformers/models/bert/modeling_bert.py", line 553, in forward
    hidden_states = self.dropout(hidden_states)
  File "/home/nooman/Documents/Transformer-Training/env/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1736, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/nooman/Documents/Transformer-Training/env/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1747, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/nooman/Documents/Transformer-Training/env/lib/python3.10/site-packages/torch/nn/modules/dropout.py", line 70, in forward
    return F.dropout(input, self.p, self.training, self.inplace)
  File "/home/nooman/Documents/Transformer-Training/env/lib/python3.10/site-packages/torch/nn/functional.py", line 1425, in dropout
    _VF.dropout_(input, p, training) if inplace else _VF.dropout(input, p, training)
torch.OutOfMemoryError: CUDA out of memory. Tried to allocate 96.00 MiB. GPU 0 has a total capacity of 3.81 GiB of which 10.19 MiB is free. Including non-PyTorch memory, this process has 3.79 GiB memory in use. Of the allocated memory 3.67 GiB is allocated by PyTorch, and 54.37 MiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)
