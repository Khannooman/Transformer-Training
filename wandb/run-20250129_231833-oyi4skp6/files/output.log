Epoch 1 / 10:   0%|                                                         | 0/1000 [00:00<?, ?it/s]
[tensor([101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101,
        101, 101]), tensor([ 1045,  1045,  4921,  1045,  1045,  1045, 10047,  1045,  1045,  1045,
         1045,  1045,  1045,  1045,  1045,  1045]), tensor([ 2939,  2001,  2063,  2514,  2224,  2145,  5777,  2056,  2514,  2514,
        11839,  2572,  2514,  2514,  2514,  2215]), tensor([ 2041,  2074,  2042,  2061,  7861,  2572,  2488,  3041,  2061, 22247,
         2008,  3110,  2005,  2008,  3458,  2689]), tensor([ 3110,  7316,  3403,  3374, 20214,  2025,  1045,  2256,  4895,  2055,
         2169,  1998,  2122,  1996, 14925,  2021]), tensor([ 2061,  2000,  2000,  2005,  5644,  2583,  2145,  4230, 22780,  1996,
         1997,  2129,  4268,  2069, 16677,  1045]), tensor([ 8916,  1037,  2131,  2017,  2138,  2000,  2074,  2031,  3993,  2627,
         2017,  2172,  2138, 11701,  9353,  2514]), tensor([ 2008,  6203,  2070,  2115,  2009,  3342,  3227,  5407,  2005,  2004,
         2040,  1045,  2017,  5576, 20559,  2066]), tensor([ 2023,  3969,  2051,  2155,  2052,  1037,  2514,  2109,  1996,  2026,
         2003,  2572,  2113,  2003,  2063, 10047]), tensor([ 2071,  2008,  2894,  1998,  2022,  2309,  9069,  2000,  2477,  3008,
        11878, 19836,  2027,  2000,  1045, 22585]), tensor([ 2428,  1996,  2005,  2814,  9596, 10634,  1045,  1996,  2002,  2031,
         2030,  2643,  2890,  5672,  2064,  2138]), tensor([ 4148, 19320,  3243,   102,  3015,  2617,  2061,  3684,  2515,  2979,
         3110,  9783, 10904,  2023,   102, 10047]), tensor([ 102, 2514, 1037,    0, 1045, 1037, 3246, 1998, 5570, 1998, 4452, 8216,
        2021, 8248,    0, 2542]), tensor([   0, 4326, 2261,    0, 2572, 6987, 2023, 1996, 2005, 1045, 3892, 2135,
        1045, 2007,    0, 2061]), tensor([    0,  2651,  3134,     0,  3110,  2008,  3110, 10628,  2033,  2196,
         4858,   102,  2228,  2049,     0, 18579]), tensor([    0,  1998,  2085,     0, 11770,  9421,  5235,  1997,  2005,  2428,
         3521,     0,  2028, 27167,     0,   102]), tensor([   0, 4999, 1998,    0, 2011, 2033, 2574, 2054, 1045, 2409, 1998,    0,
        1997, 6097,    0,    0]), tensor([   0, 2065, 2043,    0, 2054, 2125,  102, 5445, 8254, 2068, 2574,    0,
        1996, 8646,    0,    0]), tensor([   0, 2242, 1045,    0, 2017, 1037,    0, 5683, 3679, 2129,  102,    0,
        2477,  102,    0,    0]), tensor([    0,  2015,  2633,     0,  2024,  2518,     0,  2066,  1999, 18836,
            0,     0,  2007,     0,     0,     0]), tensor([    0,  2039,  2131,     0,  3015,  1045,     0,  7906, 10126,  1045,
            0,     0,  1996,     0,     0,     0]), tensor([   0,  102, 2009,    0, 2157, 2134,    0, 2033, 2542, 2572,    0,    0,
        2878,    0,    0,    0]), tensor([    0,     0, 10047,     0,  2085,  2102,     0,  9461,   102,   102,
            0,     0,  2137,     0,     0,     0]), tensor([    0,     0,  3110,     0,  2004,  2514,     0,  2005,     0,     0,
            0,     0, 10282,     0,     0,     0]), tensor([   0,    0, 1037,    0, 4941, 6625,    0, 1996,    0,    0,    0,    0,
        3066,    0,    0,    0]), tensor([   0,    0, 2978,    0, 2000, 2055,    0, 2279,    0,    0,    0,    0,
        2003,    0,    0,    0]), tensor([   0,    0, 5014,    0, 1060,  102,    0, 2621,    0,    0,    0,    0,
        2008,    0,    0,    0]), tensor([   0,    0, 6799,    0, 2094,    0,    0, 2154,    0,    0,    0,    0,
        2027,    0,    0,    0]), tensor([   0,    0,  102,    0,  102,    0,    0,  102,    0,    0,    0,    0,
        6723,    0,    0,    0]), tensor([   0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        1037,    0,    0,    0]), tensor([   0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        2907,    0,    0,    0]), tensor([   0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        1997,    0,    0,    0]), tensor([   0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        2017,    0,    0,    0]), tensor([   0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        1998,    0,    0,    0]), tensor([   0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        2017,    0,    0,    0]), tensor([   0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        2079,    0,    0,    0]), tensor([   0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        2054,    0,    0,    0]), tensor([   0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        2027,    0,    0,    0]), tensor([   0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        2425,    0,    0,    0]), tensor([   0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        2017,    0,    0,    0]), tensor([  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 102,   0,
          0,   0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0,
[tensor([101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101,
        101, 101]), tensor([ 1045,  1045,  4921,  1045,  1045,  1045, 10047,  1045,  1045,  1045,
         1045,  1045,  1045,  1045,  1045,  1045]), tensor([ 2939,  2001,  2063,  2514,  2224,  2145,  5777,  2056,  2514,  2514,
        11839,  2572,  2514,  2514,  2514,  2215]), tensor([ 2041,  2074,  2042,  2061,  7861,  2572,  2488,  3041,  2061, 22247,
         2008,  3110,  2005,  2008,  3458,  2689]), tensor([ 3110,  7316,  3403,  3374, 20214,  2025,  1045,  2256,  4895,  2055,
         2169,  1998,  2122,  1996, 14925,  2021]), tensor([ 2061,  2000,  2000,  2005,  5644,  2583,  2145,  4230, 22780,  1996,
         1997,  2129,  4268,  2069, 16677,  1045]), tensor([ 8916,  1037,  2131,  2017,  2138,  2000,  2074,  2031,  3993,  2627,
         2017,  2172,  2138, 11701,  9353,  2514]), tensor([ 2008,  6203,  2070,  2115,  2009,  3342,  3227,  5407,  2005,  2004,
         2040,  1045,  2017,  5576, 20559,  2066]), tensor([ 2023,  3969,  2051,  2155,  2052,  1037,  2514,  2109,  1996,  2026,
         2003,  2572,  2113,  2003,  2063, 10047]), tensor([ 2071,  2008,  2894,  1998,  2022,  2309,  9069,  2000,  2477,  3008,
        11878, 19836,  2027,  2000,  1045, 22585]), tensor([ 2428,  1996,  2005,  2814,  9596, 10634,  1045,  1996,  2002,  2031,
         2030,  2643,  2890,  5672,  2064,  2138]), tensor([ 4148, 19320,  3243,   102,  3015,  2617,  2061,  3684,  2515,  2979,
         3110,  9783, 10904,  2023,   102, 10047]), tensor([ 102, 2514, 1037,    0, 1045, 1037, 3246, 1998, 5570, 1998, 4452, 8216,
        2021, 8248,    0, 2542]), tensor([   0, 4326, 2261,    0, 2572, 6987, 2023, 1996, 2005, 1045, 3892, 2135,
        1045, 2007,    0, 2061]), tensor([    0,  2651,  3134,     0,  3110,  2008,  3110, 10628,  2033,  2196,
         4858,   102,  2228,  2049,     0, 18579]), tensor([    0,  1998,  2085,     0, 11770,  9421,  5235,  1997,  2005,  2428,
         3521,     0,  2028, 27167,     0,   102]), tensor([   0, 4999, 1998,    0, 2011, 2033, 2574, 2054, 1045, 2409, 1998,    0,
        1997, 6097,    0,    0]), tensor([   0, 2065, 2043,    0, 2054, 2125,  102, 5445, 8254, 2068, 2574,    0,
        1996, 8646,    0,    0]), tensor([   0, 2242, 1045,    0, 2017, 1037,    0, 5683, 3679, 2129,  102,    0,
        2477,  102,    0,    0]), tensor([    0,  2015,  2633,     0,  2024,  2518,     0,  2066,  1999, 18836,
            0,     0,  2007,     0,     0,     0]), tensor([    0,  2039,  2131,     0,  3015,  1045,     0,  7906, 10126,  1045,
            0,     0,  1996,     0,     0,     0]), tensor([   0,  102, 2009,    0, 2157, 2134,    0, 2033, 2542, 2572,    0,    0,
        2878,    0,    0,    0]), tensor([    0,     0, 10047,     0,  2085,  2102,     0,  9461,   102,   102,
            0,     0,  2137,     0,     0,     0]), tensor([    0,     0,  3110,     0,  2004,  2514,     0,  2005,     0,     0,
            0,     0, 10282,     0,     0,     0]), tensor([   0,    0, 1037,    0, 4941, 6625,    0, 1996,    0,    0,    0,    0,
        3066,    0,    0,    0]), tensor([   0,    0, 2978,    0, 2000, 2055,    0, 2279,    0,    0,    0,    0,
        2003,    0,    0,    0]), tensor([   0,    0, 5014,    0, 1060,  102,    0, 2621,    0,    0,    0,    0,
        2008,    0,    0,    0]), tensor([   0,    0, 6799,    0, 2094,    0,    0, 2154,    0,    0,    0,    0,
        2027,    0,    0,    0]), tensor([   0,    0,  102,    0,  102,    0,    0,  102,    0,    0,    0,    0,
        6723,    0,    0,    0]), tensor([   0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        1037,    0,    0,    0]), tensor([   0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        2907,    0,    0,    0]), tensor([   0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        1997,    0,    0,    0]), tensor([   0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        2017,    0,    0,    0]), tensor([   0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        1998,    0,    0,    0]), tensor([   0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        2017,    0,    0,    0]), tensor([   0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        2079,    0,    0,    0]), tensor([   0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        2054,    0,    0,    0]), tensor([   0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        2027,    0,    0,    0]), tensor([   0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        2425,    0,    0,    0]), tensor([   0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        2017,    0,    0,    0]), tensor([  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 102,   0,
          0,   0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0,
Traceback (most recent call last):
  File "/home/nooman/Documents/Transformer-Training/training.py", line 26, in <module>
  File "/home/nooman/Documents/Transformer-Training/training.py", line 19, in setup_training
  File "/home/nooman/Documents/Transformer-Training/train.py", line 142, in train
    outputs = self.model(**batch)
  File "/home/nooman/Documents/Transformer-Training/env/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1736, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/nooman/Documents/Transformer-Training/env/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1747, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/nooman/Documents/Transformer-Training/env/lib/python3.10/site-packages/transformers/models/bert/modeling_bert.py", line 1665, in forward
    outputs = self.bert(
  File "/home/nooman/Documents/Transformer-Training/env/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1736, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/nooman/Documents/Transformer-Training/env/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1747, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/nooman/Documents/Transformer-Training/env/lib/python3.10/site-packages/transformers/models/bert/modeling_bert.py", line 1058, in forward
    input_shape = input_ids.size()
AttributeError: 'list' object has no attribute 'size'
