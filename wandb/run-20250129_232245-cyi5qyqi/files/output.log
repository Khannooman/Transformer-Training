Epoch 1 / 10:   0%|                                                         | 0/1000 [00:00<?, ?it/s]
dict_keys(['label', 'input_ids', 'token_type_ids', 'attention_mask'])
[tensor([101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101,
        101, 101]), tensor([ 1045,  1045,  1045, 10047,  1045,  1045,  1045,  1045,  1045, 10047,
         1045,  1045,  1045,  1045,  1045,  1045]), tensor([2514, 2572, 2514, 5432, 2196, 2113, 2514, 6449, 2514, 3110, 4088, 2514,
        2514, 2347, 2514, 2903]), tensor([ 1037,  3110, 17733,  2017,  2018,  2045,  8211,  2008,  1996,  2062,
         2000, 11542,  5399,  2102,  2004,  2065]), tensor([20657, 17077,  2000,  2002,  2008,  2024,  1998,  2007,  2087, 18114,
         2514,  2000, 23124,  4011,  2065,  2017]), tensor([ 2296, 11542,  2130,  2015,  3168,  2335,  2894,  2035,  2590,  2625,
        10859,  2681,  3993,  2000,  2026,  2031]), tensor([2051, 2000, 2022, 3110, 1997, 2073,  102, 1996, 2518, 5458, 2098,  102,
        2008, 2022, 3129, 3407]), tensor([ 1045,  2175,  3378, 27987,  7495,  2070,     0,  4301,  2003,  1998,
         2011,     0,  1045,  2007,  1055,  1998]), tensor([ 3191,  2000,  2007,  2100,  5973,  2305,     0,  2008,  2074, 10047,
         2477,     0,  2180,  1050,  2166,  7965]), tensor([ 2019,  2082,  2023,  2023,  1998,  7849,     0,  2175,  2619,  2091,
        23713,     0,  2102,  2000,  2003,  6550]), tensor([ 6429,  4826,  2450,  2851,  2073,  4509,     0,  2083,  3084,  2048,
         2146,     0,  2022,  2074, 11126,  2017]), tensor([3010, 2130, 2011,  102, 2065, 2477,    0, 2026, 2017, 7038, 2000,    0,
        2105, 2292, 1998, 2024]), tensor([4706, 2295, 2026,    0, 5973, 2089,    0, 2132, 2200,  102, 2022,    0,
        2005, 2009, 1996, 3497]), tensor([2932, 2049, 2679,    0, 2003, 2428,    0, 1045, 6625,    0, 4064,    0,
        2023, 4148, 4611, 2000]), tensor([2005, 6928, 1998,    0, 3087, 4148,    0, 2514, 2008,    0, 2153,    0,
        2693, 2061, 1997, 2514]), tensor([ 6013,  1998, 10662,     0,  4011,  2000,     0, 21888,  2015,     0,
          102,     0,  1999,  1045,  2729,  2172]), tensor([2008, 1996,  102,    0, 2000, 2149,    0, 2012, 2035,    0,    0,    0,
        5353, 2071, 2875, 2062]), tensor([ 8909, 23839,     0,     0,  7141,  2021,     0,  2335,   102,     0,
            0,     0,  2021,  2514,  2032,  4372]), tensor([2293, 2003,    0,    0, 1998, 2043,    0, 2522,    0,    0,    0,    0,
        1045, 1996, 2003, 2121]), tensor([ 2000,  3492,     0,     0,  2514, 12802,     0,  2480,     0,     0,
            0,     0,  2228,  3480,  2579,  5856]), tensor([12040,  2204,     0,     0,  3970,  2919,     0, 10047,     0,     0,
            0,     0,  2049,  1998,  5667,  5422]), tensor([ 2000,   102,     0,     0,   102, 12018,     0,  6015,     0,     0,
            0,     0,  2005,  2693,   102,  1998]), tensor([2069,    0,    0,    0,    0, 2074,    0,  102,    0,    0,    0,    0,
        1996, 2006,    0, 4427]), tensor([ 2000,     0,     0,     0,     0, 10538,     0,     0,     0,     0,
            0,     0,  2488,  1998,     0,  2029]), tensor([2156,    0,    0,    0,    0, 2046,    0,    0,    0,    0,    0,    0,
        2008, 2022,    0, 2097]), tensor([10047,     0,     0,     0,     0,  2256,     0,     0,     0,     0,
            0,     0,  1045,  2007,     0,  2022]), tensor([2006,    0,    0,    0,    0, 9273,    0,    0,    0,    0,    0,    0,
        2079, 2040,    0, 7686]), tensor([1996,    0,    0,    0,    0, 1998,    0,    0,    0,    0,    0,    0,
        2023, 1045,    0, 1999]), tensor([2079,    0,    0,    0,    0, 2031,    0,    0,    0,    0,    0,    0,
        2817, 2001,    0, 2115]), tensor([2025,    0,    0,    0,    0, 2149,    0,    0,    0,    0,    0,    0,
        2065, 4011,    0, 3452]), tensor([4607,    0,    0,    0,    0, 3110,    0,    0,    0,    0,    0,    0,
        2009, 2000,    0, 2740]), tensor([2862,    0,    0,    0,    0, 6659,    0,    0,    0,    0,    0,    0,
        2987, 2022,    0, 1998]), tensor([ 102,    0,    0,    0,    0,  102,    0,    0,    0,    0,    0,    0,
        2102, 2007,    0, 3311]), tensor([   0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        4025,  102,    0,  102]), tensor([   0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        2066,    0,    0,    0]), tensor([   0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        1037,    0,    0,    0]), tensor([   0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        2204,    0,    0,    0]), tensor([   0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        2518,    0,    0,    0]), tensor([   0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        1045,    0,    0,    0]), tensor([   0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        2064,    0,    0,    0]), tensor([   0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        2467,    0,    0,    0]), tensor([   0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        2067,    0,    0,    0]), tensor([   0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        2041,    0,    0,    0]), tensor([   0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        1998,    0,    0,    0]), tensor([   0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        2272,    0,    0,    0]), tensor([   0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        2188,    0,    0,    0]), tensor([   0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        2000,    0,    0,    0]), tensor([   0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        9182,    0,    0,    0]), tensor([   0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        1998,    0,    0,    0]), tensor([   0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        3071,    0,    0,    0]), tensor([  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 102,   0,
          0,   0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), tensor([0, 0, 0,
Traceback (most recent call last):
  File "/home/nooman/Documents/Transformer-Training/training.py", line 23, in <module>
    setup_training(data_dir, config)
  File "/home/nooman/Documents/Transformer-Training/training.py", line 16, in setup_training
    trainer.train(train_loader, val_loader)
  File "/home/nooman/Documents/Transformer-Training/train.py", line 140, in train
    outputs = self.model(**batch)
  File "/home/nooman/Documents/Transformer-Training/env/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1736, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/nooman/Documents/Transformer-Training/env/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1747, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/nooman/Documents/Transformer-Training/env/lib/python3.10/site-packages/transformers/models/bert/modeling_bert.py", line 1665, in forward
    outputs = self.bert(
  File "/home/nooman/Documents/Transformer-Training/env/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1736, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/nooman/Documents/Transformer-Training/env/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1747, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/nooman/Documents/Transformer-Training/env/lib/python3.10/site-packages/transformers/models/bert/modeling_bert.py", line 1058, in forward
    input_shape = input_ids.size()
AttributeError: 'list' object has no attribute 'size'
